*Bubble Sort*
{{{python
# Python3 Optimized implementation of Bubble sort
def bubbleSort(arr):
    n = len(arr)

    # Traverse through all array elements
    for i in range(n):
        swapped = False

        # Last i elements are already in place
        for j in range(0, n-i-1):

            # traverse the array from 0 to n-i-1. Swap if the element found is greater than the next element
            if arr[j] > arr[j+1] :
                arr[j], arr[j+1] = arr[j+1], arr[j]
                swapped = True

        # If no two elements were swapped by inner loop, then break
        if swapped == False:
            break
}}}

*Quick Sort*
{{{python
# Easy to read, but not in place version of quick sort
def quickSort(arr):
    if len(arr) < 2:
        return arr
    else:
        return
            quickSort([x for x in arr[1:] if x < arr[0]]) +
            arr[0] +
            quickSort([x for x in arr[1:] if x >= arr[0]])
}}}
